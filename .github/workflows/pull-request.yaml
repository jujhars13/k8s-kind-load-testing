name: pull-request
on: [push, pull_request]

jobs:
  setup-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - uses: actions/checkout@v3
      - name: Lint
        uses: github/super-linter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_BASH: true
          VALIDATE_YAML: true

      - name: Spin up Kind Cluster
        uses: helm/kind-action@v1.8.0
        with:
          config: scripts/kind-config.yaml

      - name: Test kind cluster is working
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy nginx ingress controller to kind cluster
        run: |
          curl https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml --output /tmp/ingress-nginx-deploy.yaml
          patch -u /tmp/ingress-nginx-deploy.yaml -i nginx-ingress-toleration.patch
          kubectl apply -f /tmp/ingress-nginx-deploy.yaml

          echo "Wait till ingress is ready..."
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=120s

          kubectl --namespace ingress-nginx get all

      - name: Deploy our application stack
        env:
          ENVIRONMENT: "ci-performance"
        run: |
          echo "Deploy application stack"
          kubectl kustomize "deploy/kubernetes/${ENVIRONMENT}" | \
          kubectl apply -f -

          echo "Wait till appplication deploys..."
          kubectl wait --namespace k8s-kind-load-testing \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=app-one \
            --timeout=120s

          echo "Check on the deployment"
          kubectl -n k8s-kind-load-testing get all

      - name: Run Vegeta load test against Foo service
        env:
          URL: http://foo.localhost
          DURATION: 60s
        run: |
          scripts/load-test.sh

      - name: Run Vegeta load test against Bar service
        env:
          URL: http://bar.localhost
          DURATION: 60s
        run: |
          export LOAD_TEST_OUTOUT=$(scripts/load-test.sh)
          mkdir -p /tmp/load-test-report
          cat <<EOT >> /tmp/load-test-report/load-test-results-bar.md
            ## Load test output for Bar service
            $LOAD_TEST_OUTPUT
          EOT

      - name: Grab test result content for PR body
        uses: zattoo/output@2.0.0
        with:
          name: Load-testing-results
          token: ${{github.token}}
          sources: "tmp/load-test-report"
